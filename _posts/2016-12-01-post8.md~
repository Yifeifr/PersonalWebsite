---
layout: post
title: Algorithm-Two Sum II
subtitle: 
author: Yifei
date: 2016-12-01 17:35:49 +0100
categories: Algorithm
tag: Algorithm C++
---

....................................................................

Given an array of integers, find how many pairs in the array such that their sum is bigger than a specific target number. Please return the number of pairs.

....................................................................

Given numbers = [2, 7, 11, 15], target = 24. Return 1. (11 + 15 is the only pair)

....................................................................

class Solution {
public:
    /**
     * @param nums: an array of integer
     * @param target: an integer
     * @return: an integer
     */
    int twoSum2(vector<int> &nums, int target) {
        // Write your code here
        int n = nums.size();
        int cnt = 0;
        if (nums.empty()) {
            return 0;
        } else {
            // important to 'sort' before 'find'
            sort(nums.begin(), nums.end());
            for (int i = 0; i < n; ++i) {
                cnt = cnt + find(nums, target - nums[i], i + 1, n - 1);
                //cout<<"test!"<<endl;
            }
        return cnt;
        }
    }
    // const?
    int find(vector<int> nums, int target, int l, int r) {
        int mid;
        int res;
        //int res = r + 1;
        int m = r;
        if (l > r) {
            return 0;
        }
        if (nums[l] > target) {
            return r - l + 1;
        }
        if (nums[r] <= target) {
            return 0;
        }
        while (l <= r) {
            mid = (l + r) >> 1;
            if (nums[mid] > target) {
                res = mid;
                r = mid -1;
            } else {
                l = mid + 1;
            }
        }
        //cout<<"res="<<res<<endl;
        return m - res + 1;
    }
};

